//==========================================================================================

    package com.saftno.compressions;

//==========================================================================================

    import net.minecraft.util.ResourceLocation;
    import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;

//==========================================================================================

    import java.nio.file.FileSystem;

//==========================================================================================

    @SuppressWarnings( "WeakerAccess" ) class Models {

    //======================================================================================

        static String column;

    //======================================================================================

        static class Initialization {

        //==================================================================================

            static void Pre( @SuppressWarnings("unused") FMLPreInitializationEvent event ) {
            //------------------------------------------------------------------------------

                column = String.join( "\n" , new String[] {
                //--------------------------------------------------------------------------
                    "{ 'forge_marker' : 1                                                " ,
                    ", 'defaults' : { 'model'     : 'cube_column'                        " ,
                    "               , 'textures'  : { 'end' : '[MODID]:blocks/[TEX]'     " ,
                    "                               , 'side': '[MODID]:blocks/[TEX]' } } " ,
                    ", 'variants' : { 'normal'    : [ { } ]                              " ,
                    "               , 'inventory' : [ { } ]                              " ,
                    "               , 'recipe'    : [ { } ] } }                          " ,
                //--------------------------------------------------------------------------
                } );

                column = column.replace( "'" , "\"" );
                column = column.replace( "[MODID]" , Base.modId );

            //------------------------------------------------------------------------------
            }

        //==================================================================================

        }

        static class Generation {

        //==================================================================================

            static void Blockstates() {
            //------------------------------------------------------------------------------
                if( null == Resources.tmp ) return;
            //------------------------------------------------------------------------------

                FileSystem mod = Resources.mod;
                FileSystem tmp = Resources.tmp;

            //------------------------------------------------------------------------------

                int L1 = Blocks.Generation.blocks.length;
                int L2 = Configurations.getDepth() + 1;

            //------------------------------------------------------------------------------
                for( int y = 0; y < L1; y++ ) { for( int x = 1; x < L2; x++ ) {
            //------------------------------------------------------------------------------

                    Blocks.Compressed stack = Blocks.Generation.blocks[y][x];
                    ResourceLocation  loc   = stack.getRegistryName();

                    if( null == loc ) continue;

                //--------------------------------------------------------------------------

                    String tex = loc.getResourcePath();
                    String json = column.replace( "[TEX]" , tex );
                    String jsonName = "/assets/" +Base.modId+ "/blockstates/" +tex+ ".json";

                //--------------------------------------------------------------------------

                    if( null != mod ) Resources.Write( json , mod.getPath( jsonName ) );
                    if( null != tmp ) Resources.Write( json , tmp.getPath( jsonName ) );

            //------------------------------------------------------------------------------
            } } }

        //==================================================================================

        }

    //======================================================================================

    }

//==========================================================================================

