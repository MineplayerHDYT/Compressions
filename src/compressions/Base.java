//==================================================================================================

    package compressions;

//==================================================================================================

    import net.minecraft.item.Item;
    import net.minecraftforge.client.event.GuiScreenEvent.DrawScreenEvent;
    import net.minecraftforge.event.RegistryEvent.Register;
    import net.minecraftforge.fml.common.Mod;
    import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
    import org.apache.commons.lang3.StringUtils;

//=======================================================================================================

    import java.io.UnsupportedEncodingException;
    import java.math.BigInteger;
    import java.nio.file.Path;
    import java.nio.file.Paths;

//==================================================================================================
    @Mod.EventBusSubscriber
//--------------------------------------------------------------------------------------------------
    @Mod( modid   = Base.modId   , acceptedMinecraftVersions = "[1.12 , 1.12.1]",
          name    = Base.name    ,
          version = Base.version )
//--------------------------------------------------------------------------------------------------
    @SuppressWarnings( { "WeakerAccess" , "CanBeFinal" } )
//==================================================================================================

    public class Base {

    //==============================================================================================
    // Forge
    //==============================================================================================

        public static final String modId   = "compressions";
        public static final String name    = "Compressions";
        public static final String version = "3.0.0";

    //==============================================================================================
        @Mod.Instance( modId )
    //==============================================================================================

        public static Base instance;

    //==============================================================================================
    // Initialization
    //==============================================================================================

        public static Boolean once = false;
        public static Path    root = Paths.get( System.getProperty( "user.dir" ) );

    //==============================================================================================
        @SubscribeEvent
    //==============================================================================================

        public static void Register( Register<Item> event ) {
        //------------------------------------------------------------------------------------------

            Configurations.getEntries();

        //------------------------------------------------------------------------------------------
        }

    //==============================================================================================
        @SubscribeEvent
    //==============================================================================================

        public static void Register( DrawScreenEvent event ) {
        //------------------------------------------------------------------------------------------
            if( once ) return;
        //------------------------------------------------------------------------------------------

        //------------------------------------------------------------------------------------------
            once = true;
        //------------------------------------------------------------------------------------------
        }

    //==============================================================================================
    // Utility
    //==============================================================================================

        public static Integer Hash( Integer value ) {
        //------------------------------------------------------------------------------------------
            if( null == value ) return "11400714785074694791".hashCode();
        //------------------------------------------------------------------------------------------

            Long hash = Long.valueOf( value );

        //------------------------------------------------------------------------------------------

            hash *= 0x2654435761L;
            hash ^= hash >> 15;
            hash *= 0x2246822519L;
            hash ^= hash >> 13;
            hash *= 0x3266489917L;
            hash ^= hash >> 16;

        //------------------------------------------------------------------------------------------

            hash = ( hash >> 32 ) ^ ( hash & 0xFFFFFFFFL );

        //------------------------------------------------------------------------------------------
            return hash.intValue();
        //------------------------------------------------------------------------------------------
        }

        public static Integer Hash( String  value ) { try {
        //------------------------------------------------------------------------------------------
            if( null == value ) return "14029467366897019727".hashCode();
        //------------------------------------------------------------------------------------------

            Long hash = 0x0L;

        //------------------------------------------------------------------------------------------
            for( int i = 0; i < value.getBytes( "utf8" ).length; i++ ) {
        //------------------------------------------------------------------------------------------

                hash ^= Hash( (int) value.getBytes( "utf8" )[0] );

        //------------------------------------------------------------------------------------------
            }
        //------------------------------------------------------------------------------------------

            hash = ( hash >> 32 ) ^ ( hash & 0xFFFFFFFFL );

        //------------------------------------------------------------------------------------------
            return hash.intValue();
        //------------------------------------------------------------------------------------------
        } catch(UnsupportedEncodingException ex) { ex.printStackTrace(); return value.hashCode(); }}

    //==============================================================================================

    }

//==================================================================================================
